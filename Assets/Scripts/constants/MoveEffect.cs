using static MoveEffect;
public enum MoveEffect : ushort
{
    //No added effect
    None,
    Hit,
    //Multi-hit moves
    MultiHit2,
    MultiHit2to5,
    Twineedle,
    TripleHit,
    //Status-inducing moves
    Burn,
    Paralyze,
    Poison,
    Toxic,
    Freeze,
    Sleep,
    Confuse,
    TriAttack,
    Swagger,
    Flatter,
    //Stat changes
    AttackUp1,
    AttackUp2,
    DefenseUp1,
    DefenseUp2,
    SpAtkUp1,
    SpAtkUp2,
    SpAtkUp3,
    SpDefUp2,
    SpeedUp2,
    EvasionUp1,
    EvasionUp2,
    CritRateUp2,
    AttackDown1,
    AttackDown2,
    DefenseDown1,
    DefenseDown2,
    SpAtkDown1,
    SpAtkDown2,
    SpDefDown1,
    SpDefDown2,
    SpeedDown1,
    SpeedDown2,
    AccuracyDown1,
    EvasionDown2,
    AttackDefenseUp1,
    AttackSpeedUp1,
    DefenseSpDefUp1,
    SpAtkSpDefUp1,
    AttackDefenseDown1,
    DefenseSpDefDown1,
    AllUp1,
    Acupressure,
    BellyDrum,
    Captivate,
    Charge,
    DefenseCurl,
    Growth,
    Minimize,
    //Other status moves
    Attract,
    Curse,
    Defog,
    Disable,
    Embargo,
    Encore,
    ForcedSwitch,
    Foresight,
    GuardSwap,
    HealBlock,
    HeartSwap,
    Imprison,
    LeechSeed,
    MeFirst,
    Memento,
    MindReader,
    MiracleEye,
    Nightmare,
    PerishSong,
    PowerSwap,
    PsychoShift,
    PsychUp,
    RolePlay,
    SkillSwap,
    Snatch,
    Spite,
    SuppressAbility,
    Taunt,
    Torment,
    Trap,
    Trick,
    WorrySeed,
    Yawn,
    //Direct damage
    Direct20,
    Direct40,
    DirectLevel,
    Psywave,
    SuperFang,
    //Recoil
    Recoil33,
    Recoil25,
    Recoil25Max,
    Crash50Max,
    VoltTackle,
    FlareBlitz,
    //Other added effects
    Absorb50,
    BreakScreens,
    FakeOut,
    Flinch,
    KnockOff,
    PayDay,
    RapidSpin,
    SecretPower,
    SmellingSalts,
    Thief,
    WakeUpSlap,
    //Unique attack types
    Assurance,
    BeatUp,
    ChargingAttack,
    ContinuousDamage,
    Counter,
    DreamEater,
    Endeavor,
    FalseSwipe,
    Feint,
    Fling,
    FuryCutter,
    FutureSight,
    HiddenPower,
    Judgement,
    LastResort,
    MetalBurst,
    NaturalGift,
    NaturePower,
    OHKO,
    PainSplit,
    Pluck,
    Present,
    Rage,
    Recharge,
    Rollout,
    SelfDestruct,
    Snore,
    SuckerPunch,
    SwitchHit,
    Thrash,
    TrumpCard,
    Uproar,
    //Moves which double in power under certain conditions
    Brine,
    Facade,
    Pursuit,
    Revenge,
    Payback,
    WeatherBall,
    //Moves with unique power calcs
    WeightPower,
    HealthPower,
    Reversal,
    TargetHealthPower,
    LowSpeedPower,
    UserStatPower,
    TargetStatPower,
    Return,
    Frustration,
    Magnitude,
    //Paired effects
    Bide,
    BideHit,
    Stockpile,
    Swallow,
    SpitUp,
    FocusPunchWindup,
    FocusPunchAttack,
    //Field effects
    Gravity,
    Haze,
    LightScreen,
    LuckyChant,
    Mist,
    MudSport,
    Reflect,
    Safeguard,
    StealthRock,
    Spikes,
    Tailwind,
    ToxicSpikes,
    TrickRoom,
    WaterSport,
    Weather,
    //Self-targeting effects
    AquaRing,
    Assist,
    BatonPass,
    Camouflage,
    Conversion,
    Conversion2,
    Copycat,
    DestinyBond,
    Endure,
    Grudge,
    Heal50,
    HealBell,
    HealingWish,
    HealStatus,
    HealWeather,
    Ingrain,
    MagicCoat,
    MagnetRise,
    Metronome,
    Mimic,
    MirrorMove,
    PowerTrick,
    Protect,
    Recycle,
    Rest,
    Roost,
    SleepTalk,
    Substitute,
    Teleport,
    Transform,
    Sketch,
    Wish,
    //Effects for doubles/triples
    FollowMe,
    HelpingHand,
}

public static class MoveEffectUtils
{

    public static bool IsStatDrop(this MoveEffect effect)
        => effect is AttackDown1 or AttackDown2 or DefenseDown1
        or DefenseDown2 or SpAtkDown1 or SpAtkDown2 or SpDefDown1
        or SpDefDown2 or SpeedDown1 or SpeedDown2 or AttackDefenseDown1
        or DefenseSpDefDown1 or Captivate;

    public static bool IsStatusMove(this MoveEffect effect)
        => effect is Paralyze or Freeze or Burn or Sleep or Poison or Toxic
        or TriAttack;
    public static bool IsShieldDustAffected(this MoveEffect effect)
    {
        return effect.IsStatusMove() || effect.IsStatDrop()
            || effect is Flinch;
    }
}